/*
   Copyright 2011 Sander Kooijmans

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
package nl.gogognome.lib.dao;

import java.sql.PreparedStatement;
import java.sql.SQLException;

/**
 * This interface specifies a plugin for DAOs that handles DMBS specific issues.
 *
 * @author Sander Kooijmans
 */
public interface DBMSSpecificDAOPlugin {

    /**
     * Creates the table of this DAO.
     * @throws SQLException if a problem occurs while creating the table.
     */
    public void createTable() throws SQLException;

    /**
     * Drops the table of this DAO.
     * @throws SQLException if a problem occurs while dropping the table.
     */
    public void dropTable() throws SQLException;

    /**
     * Replaces null values for auto increment columns. This method is called
     * for column values that will be used to insert a new record in a table.
     * @param colValues the column values
     */
    public void replaceNullValueForAutoIncrementColumns(ColumnValuePairs colValues);

    /**
     * Gets column value pairs for values that were generated by the last
     * insert statement.
     * @param statement the inser statement that has just been executed
     * @return the column value pairs (never null)
     * @throws SQLException if a problem occurs.
     */
	public ColumnValuePairs getGeneratedValues(PreparedStatement statement) throws SQLException;
}
